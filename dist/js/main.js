!function(t){function e(e){for(var i,o,r=e[0],l=e[1],h=e[2],p=0,d=[];p<r.length;p++)o=r[p],n[o]&&d.push(n[o][0]),n[o]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(t[i]=l[i]);for(c&&c(e);d.length;)d.shift()();return a.push.apply(a,h||[]),s()}function s(){for(var t,e=0;e<a.length;e++){for(var s=a[e],i=!0,r=1;r<s.length;r++){var l=s[r];0!==n[l]&&(i=!1)}i&&(a.splice(e--,1),t=o(o.s=s[0]))}return t}var i={},n={0:0},a=[];function o(e){if(i[e])return i[e].exports;var s=i[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,o),s.l=!0,s.exports}o.m=t,o.c=i,o.d=function(t,e,s){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(s,i,function(e){return t[e]}.bind(null,i));return s},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="";var r=window.webpackJsonp=window.webpackJsonp||[],l=r.push.bind(r);r.push=e,r=r.slice();for(var h=0;h<r.length;h++)e(r[h]);var c=l;a.push([10,1]),s()}({10:function(t,e,s){"use strict";s.r(e);s(1),s(6);const i={};class n{constructor(){}async get(t){return i[t]||(i[t]=fetch(t).then(t=>t.json())),i[t]}}class a{constructor(){this.cmn=new n,this.pokeapi="https://pokeapi.co/api/v2/"}async getPokemon(t){return this.cmn.get(`${this.pokeapi}pokemon/${t}/`)}async getPokemonList(t,e){return this.cmn.get(`${this.pokeapi}pokemon?offset=${t}&limit=${e}`)}async getSpecies(t){return this.cmn.get(`${this.pokeapi}pokemon-species/${t}/`)}async getAllVersions(){return this.cmn.get(`${this.pokeapi}version?offset=0&limit=999`)}async getVersion(t){return this.cmn.get(`${this.pokeapi}version/${t}/`)}async getType(t){return this.cmn.get(`${this.pokeapi}type/${t}/`)}async getMove(t){return this.cmn.get(`${this.pokeapi}move/${t}/`)}async getMoveDamageClass(t){return this.cmn.get(`${this.pokeapi}move-damage-class/${t}/`)}async getMoveLearnMethod(t){return this.cmn.get(`${this.pokeapi}move-learn-method/${t}/`)}}const o="en";function r(t){return t.filter(t=>t.language.name===o)}function l(t){return t.find(t=>t.language.name===o)}function h(t,e){return t.find(t=>t.version_group.name===e)}class c{constructor(t){this.ele=t,this.state={},this.childComponents=new Array}setState(t){Object.assign(this.state,t)}async init(){return await this.initChildern(),this}initChildern(){return Promise.all(this.childComponents.map(t=>t.init()))}template(){return""}}class p extends c{constructor(t){super(t)}async init(){return this.state.type=await(new a).getType(this.state.type.name),this.ele.innerHTML=this.template(),super.init()}template(){return`<span>${l(this.state.type.names).name}</span>`}}class d extends c{constructor(t){super(t)}async init(){this.ele.innerHTML=this.template(),this.childComponents.forEach((t,e)=>{t.ele=this.ele.querySelector(`#obj_${e}`)}),await super.init(),this.ele.querySelector("#list_spin").remove(),this.ele.querySelector("ul").classList.remove("is-invisible")}spinner(t){return`<div id=${t} class='columns'><i class='column fas fa-spinner fa-pulse fa-3x'/></i></div>`}template(){return`${this.spinner("list_spin")}<ul class='is-invisible' style='height:400px; overflow-y: scroll;'>${this.childComponents.map((t,e)=>`<li id='obj_${e}' style='border-top:solid;'></li>`).join("")}</ul>`}}class u extends c{constructor(t){super(t)}async init(){return this.state.flavorText?(this.state.flavorText.version=await(new a).getVersion(this.state.flavorText.version.name),this.ele.innerHTML=this.template(l(this.state.flavorText.version.names).name,this.state.flavorText.flavor_text)):this.ele.innerHTML=this.template("","Not Available"),super.init()}template(t,e){return`<div class='columns'>\n                    <div class='column is-2'><strong>${t} Pokedex Entry</strong>:</div>\n                    <div class='column'>${e}</div>\n                </div>`}}class v extends c{constructor(t){super(t)}async init(){if(this.state.version){if(this.state.versionDetails=h(this.state.origMove.version_group_details,this.state.version.version_group.name),this.state.versionDetails){let t=new a,e=await Promise.all([await t.getMoveLearnMethod(this.state.versionDetails.move_learn_method.name),await t.getMove(this.state.move.name)]);this.state.versionDetails.move_learn_method=e[0],this.state.move=e[1],this.state.move.damage_class=await t.getMoveDamageClass(this.state.move.damage_class.name),this.state.flavor_text=h(r(this.state.move.flavor_text_entries),this.state.version.version_group.name),this.ele.innerHTML=this.template();let s=new p(this.ele.querySelector(`#${this.state.move.name}_type`));return s.setState({type:this.state.move.type}),await s.init(),super.init()}}else this.ele.innerHTML="Missing Version"}template(){return`<section class='section'>\n                    <div>\n                        <div class='columns'>\n                            <span class='column'><strong>${l(this.state.move.names).name}</strong></span>\n                            <span class='column'>Type: <span id='${this.state.move.name}_type'></span></span>\n                            <span class='column is-capitalized'>Class: ${l(this.state.move.damage_class.names).name}</span>  \n                            <span class='column'>Power: ${this.state.move.power?this.state.move.power:"-"}</span>\n                            <span class='column'>Accuracy: ${this.state.move.accuracy?this.state.move.accuracy:"-"}</span>\n                        </div>\n                        <div>${this.state.flavor_text?this.state.flavor_text.flavor_text:"-"}</div>\n                        ${this.state.versionDetails?this.learnMethodTemplate():""}\n                    </div>\n                </section>`}learnMethodTemplate(){return`<div>Learn Method: ${"level-up"===this.state.versionDetails.move_learn_method.name?`Learned at level ${this.state.versionDetails.level_learned_at}`:l(this.state.versionDetails.move_learn_method.descriptions).description}</div>`}}class m extends d{constructor(t){super(t)}async init(){return this.state.moveList=this.state.moveList.filter(t=>!!h(t.version_group_details,this.state.version.version_group.name)),this.childComponents=this.state.moveList.map(t=>{let e=new v(null);return e.setState({move:t.move,origMove:t,version:this.state.version}),e}),super.init()}}class g extends c{constructor(t){super(t),this.state.date={},this.state.show=!1}async init(){if(this.state.data.id){let t=new a;this.state.data=await t.getPokemon(this.state.data.id),this.state.data.species=await t.getSpecies(this.state.data.species.name),this.ele.innerHTML=this.template(),this.ele.querySelector(`#head_${this.state.data.id}`).addEventListener("click",this.headClick.bind(this)),this.ele.querySelector(`#types_${this.state.data.id}`).innerHTML=this.state.data.types.reverse().map(t=>`<span id='types_${this.state.data.id}_${t.type.name}'></span>`).join(" | ");let e=this.state.data.types.reverse().map(t=>{let e=new p(this.ele.querySelector(`#types_${this.state.data.id}_${t.type.name}`),t.type);return e.setState({type:t.type}),e}).map(t=>t.init());return this.ele.querySelectorAll("nav .panel-heading").forEach(t=>t.addEventListener("click",this.tabClick.bind(this))),await Promise.all(e),super.init()}}headClick(){!this.state.show&&this.state.version?(this.ele.querySelector(`#body_${this.state.data.id}`).style.display="block",this.state.show=!this.state.show):(this.ele.querySelector(`#body_${this.state.data.id}`).style.display="none",this.state.show=!this.state.show)}initVersionedData(){var t,e;this[`flavor_text_${this.state.data.id}`]=new u(this.ele.querySelector(`#flavor_text_${this.state.data.id}`)),this[`flavor_text_${this.state.data.id}`].setState({flavorText:(t=r(this.state.data.species.flavor_text_entries),e=this.state.version.name,t.find(t=>t.version.name===e))});let s=[this[`flavor_text_${this.state.data.id}`].init()];return this[`moves_${this.state.data.id}`]=new m(this.ele.querySelector(`#moves_${this.state.data.id}`)),this[`moves_${this.state.data.id}`].setState({moveList:this.state.data.moves,version:this.state.version}),this.ele.querySelector(`#moves_${this.state.data.id}_head`).classList.contains("is-active")&&s.push(this[`moves_${this.state.data.id}`].init()),Promise.all(s)}async onVersionChange(t){this.state.version=t,this.ele.querySelector("nav").style.display="block",await this.initVersionedData()}tabClick(t){t.target.classList.contains("is-active")?this.tabClear():(this.tabClear(),t.target.classList.add("is-active"),this.ele.querySelector(t.target.getAttribute("controls")).style.display="block",this.ele.querySelector(t.target.getAttribute("controls")).innerHTML||this[t.target.getAttribute("controls").replace("#","")].init())}tabClear(){this.ele.querySelectorAll("nav .panel-heading").forEach(t=>t.classList.remove("is-active")),this.ele.querySelectorAll("nav .panel-block").forEach(t=>t.style.display="none")}template(){return`<div class='panel'>\n                    <section id='head_${this.state.data.id}' class='panel-heading'>\n                        <div class='level'>\n                            <div class='level-left'>\n                                <span>\n                                    <figure class='image is-96x96'><img src='${this.state.data.sprites.front_default}'></figure>\n                                </span>\n                                <h1 class='title'>${l(this.state.data.species.names).name}</h1>\n                            </div>\n                            <div class='level-right'>\n                                <span id='types_${this.state.data.id}'></span>\n                            </div>\n                        </div>\n                    </section>\n                    <span id='body_${this.state.data.id}' class='panel-block' style='display:none'>\n                        <section class='section'>\n                            <div id='flavor_text_${this.state.data.id}'></div>\n                        </section>\n                        <section class='section'>\n                            <nav class='panel box is-paddingless' style='display:none'>\n                                <p class='panel-heading' id='moves_${this.state.data.id}_head' controls='#moves_${this.state.data.id}'>Moves</p>\n                                <div id='moves_${this.state.data.id}' class='panel-block' style='display:none'></div>\n                            </nav>\n                        </section>\n                    </span>\n                </div>`}}class f extends c{constructor(t){super(t)}async init(){return this.ele.innerHTML=this.template(),this.ele.querySelector("select").addEventListener("change",this.onChange.bind(this)),this.state.value&&(this.ele.querySelector("select").value=this.state.value),super.init()}onChange(){this.setState({value:this.ele.querySelector("select").value}),this.state.onChange&&this.state.onChange(this.state.value)}template(){let t="";return this.state.optionsMap.forEach((e,s)=>{t+=`<option value='${s}'>${e}</option>`}),`<select>${t}</select>`}}class y extends c{constructor(t){super(t)}async init(){let t=new a;return this.versions=(await t.getAllVersions()).results,this.versions=await Promise.all(this.versions.map(e=>t.getVersion(e.name))),this.ele.innerHTML=this.template(),this.ele.querySelector("select").value=this.state.version?this.state.version.name:"",this.ele.querySelector("select").addEventListener("change",this.onChange.bind(this)),super.init()}onChange(t){this.state.onChangeCallBack(this.versions.find(e=>e.name===t.target.selectedOptions[0].value))}getVersion(){let t=this.ele.querySelector("select").selectedOptions[0].value;return this.versions.find(e=>e.name===t)}template(){return`<div class="select">\n                    <select>\n                    <option value=''>Select Version</option>\n                        ${this.versions.map(t=>`<option value='${t.name}'>${l(t.names).name}</option>`).join("")}\n                    </select>\n                </div>`}}class _ extends c{constructor(t){super(t),this.setState({numberOfPages:1,version:null})}async init(){if(this.setState({pageNumber:Math.trunc(this.state.offset/this.state.limit)}),this.state.numberOfPages){this.ele.innerHTML=this.template();let t=new f(this.ele.querySelector("#select_page"));t.setState({optionsMap:this.pageoOtions(),onChange:this.onPageSelect.bind(this),value:this.state.pageNumber}),this.childComponents.push(t);let e=new y(this.ele.querySelector("#version_picker"));e.setState({version:this.state.version,onChangeCallBack:this.onVersionChange.bind(this)}),this.childComponents.push(e),this.ele.querySelector("#select_limit select").addEventListener("change",this.onLimitSelect.bind(this)),this.ele.querySelector("#left_page").addEventListener("click",()=>{this.setoffset(this.state.offset-this.state.limit)}),this.ele.querySelector("#right_page").addEventListener("click",()=>{this.setoffset(this.state.offset+this.state.limit)});let s=this.ele.querySelector(".navbar-burger"),i=this.ele.querySelector(".navbar-menu");return s.addEventListener("click",()=>{let t=s.classList.contains("is-active");s.classList[t?"remove":"add"]("is-active"),i.classList[t?"remove":"add"]("is-active")}),super.init()}}onVersionChange(t){this.setState({version:t}),this.state.onVersionChange(t)}onPageSelect(t){this.setState({pageNumber:t}),this.setoffset(t*this.state.limit)}pageoOtions(){return new Map(new Array(this.state.numberOfPages).fill(0).map((t,e)=>[e,e+1]))}onLimitSelect(){return this.setState({limit:parseInt(this.ele.querySelector("#select_limit select").value.trim())}),this.state.onOffsetLimitChange(this.state.offset,this.state.limit),this.init()}setoffset(t){let e=this.state.numberOfPages*this.state.limit;return t<0?t=0:t>e&&(t=e),this.setState({offset:t}),this.state.onOffsetLimitChange(this.state.offset,this.state.limit),this.init()}template(){return"<nav class='navbar is-fixed-top is-dark'>\n                    <div class=\"navbar-brand\">\n                    <img src=\"https://img.icons8.com/color/50/000000/pokeball.png\" width=\"52\" height=\"52\">\n                    </div>\n                    <div class='navbar-menu'>\n                        <div class='navbar-end'>\n                            <div class='navbar-item'>\n                                <button id='left_page' class='button'><i class='fas fa-angle-left'></i></button>\n                                <span id='select_page' class='select'></span>\n                                <button id='right_page' class='button'><i class='fas fa-angle-right'></i></button>\n                            </div>\n                            <div class='navbar-item'>\n                                <span id='select_limit' class='select'>\n                                    <select>\n                                        <option value='5'>5</option>\n                                        <option value='10'>10</option>\n                                        <option value='20'>20</option>\n                                    </select>\n                                </span>\n                                <span> Per Page</span>\n                            </div>\n                            <div class='navbar-item'>\n                                <span id='version_picker'></span>\n                            </div>\n                        </div>\n                    </div>\n                    <a role='button' class='navbar-burger' aria-label='menu' aria-expanded='false'>\n                        <span aria-hidden='true'></span>\n                        <span aria-hidden='true'></span>\n                        <span aria-hidden='true'></span>\n                    </a>\n                </nav>"}}class b extends c{constructor(t){super(t),this.setState({offset:0,limit:5,version:null})}async init(){this.toggleControls(!0);let t=new a,e=await t.getPokemonList(this.state.offset,this.state.limit);this.ele.innerHTML||(this.ele.innerHTML=this.template()),this.toggleControls(!0);let s=this.ele.querySelector("#list");s.innerHTML="",this.pokemonArr||(this.pokemonArr=new Array(e.count));let i=new _(this.ele.querySelector("#list_controller"));i.setState({offset:this.state.offset,limit:this.state.limit,version:this.state.version,onOffsetLimitChange:this.onOffsetLimitChange.bind(this),numberOfPages:Math.trunc(this.pokemonArr.length/this.state.limit),onVersionChange:this.onVersionChange.bind(this)}),i.init(),this.displayedPokemon=new Array(e.results.length),s.innerHTML=e.results.map(t=>`<li id='poke_${t.name}'></li>`).join("");for(let t=this.state.offset;t<this.state.offset+this.state.limit&&t<this.pokemonArr.length;t++)this.pokemonArr[t]||(this.pokemonArr[t]=e.results[t-this.state.offset]),this.displayedPokemon[t-this.state.offset]=new g(s.querySelector(`#poke_${this.pokemonArr[t].name}`)),this.displayedPokemon[t-this.state.offset].setState({data:{id:this.pokemonArr[t].name}});await Promise.all(this.displayedPokemon.map(t=>t.init())),this.state.version&&await this.onVersionChange(this.state.version),this.toggleControls(!1)}onOffsetLimitChange(t,e){this.setState({offset:t,limit:e}),this.init()}async onVersionChange(t){return this.setState({version:t}),await Promise.all(this.displayedPokemon.map(e=>e.onVersionChange(t))),!0}toggleControls(t){this.ele.querySelectorAll("#left_page, #right_page, select").forEach(e=>e[t?"setAttribute":"removeAttribute"]("disabled",!0))}template(){return"<span id='list_controller'></span>\n                <section class='section box'>\n                    <div class='container'>\n                        <ul id='list'></ul>\n                    </div>\n                </section>"}}class S{constructor(t){this.ele=t}async init(){return this.ele.innerHTML=this.template(),this.pokemon_list=new b(this.ele.querySelector("#output")),await this.pokemon_list.init(),!0}template(){return"<section class='section has-background-grey-light'>\n                    <span id='output'></span>\n                </section>"}}document.addEventListener("DOMContentLoaded",()=>{a||console.log("REQUEST_CACHE missing"),new S(document.querySelector("#pokedex")).init()})}});