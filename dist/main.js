!function(t){var e={};function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(s,n,function(e){return t[e]}.bind(null,n));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);class s{constructor(){}async get(t){return(await fetch(t)).json()}}class n{constructor(){this.cmn=new s,this.pokeapi="https://pokeapi.co/api/v2/"}async getPokemon(t){return this.cmn.get(`${this.pokeapi}pokemon/${t}/`)}async getSpecies(t){return this.cmn.get(`${this.pokeapi}pokemon-species/${t}/`)}async getVersion(t){return this.cmn.get(`${this.pokeapi}version/${t}/`)}async getType(t){return this.cmn.get(`${this.pokeapi}type/${t}/`)}async getMove(t){return this.cmn.get(`${this.pokeapi}move/${t}/`)}}function a(t){return t.find(t=>t.language.name===u)}class r{constructor(t,e){this.ele=t,this.type=e}async init(){return this.type=await(new n).getType(this.type.name),this.ele.innerHTML=this.template(),!0}template(){return`<span>${a(this.type.names).name}</span>`}}class l{constructor(t,e){this.ele=t,this.objList=e}async init(){this.ele.innerHTML=this.template(),this.objList.forEach((t,e)=>{t.ele=this.ele.querySelector(`#obj_${e}`)}),await Promise.all(this.objList.map(t=>t.init())),this.ele.querySelector("#list_spin").remove(),this.ele.querySelector("ul").classList.remove("is-invisible")}spinner(t){return`<span id=${t}><i class='fas fa-spinner fa-pulse fa-3x'/></i></span>`}template(){return`${this.spinner("list_spin")}<ul class='is-invisible'>${this.objList.map((t,e)=>`<li id='obj_${e}'></li>`).join("")}</ul>`}}class o{constructor(t,e){this.ele=t,this.flavorText=e}async init(){this.flavorText.version=await(new n).getVersion(this.flavorText.version.name),this.ele.innerHTML=this.template()}template(){return`<div class='columns'>\n                    <div class='column is-2'><strong>${a(this.flavorText.version.names).name}</strong>:</div>\n                    <div class='column'>${this.flavorText.flavor_text}</div>\n                </div>`}}class c{constructor(t,e){this.ele=t,this.ftList=e,this.objList=new l(this.ele,this.ftList.map(t=>new o(null,t)))}async init(){this.objList.init()}}class h{constructor(t,e){this.ele=t,this.move=e}async init(){return this.move=await(new n).getMove(this.move.name),this.ele.innerHTML=this.template(),await new r(this.ele.querySelector(`#${this.move.name}_type`),this.move.type).init(),!0}template(){return`<span><strong>${a(this.move.names).name}</strong> <span id='${this.move.name}_type'></span>`}}class d{constructor(t,e){this.ele=t,this.moveList=e,this.objList=new l(this.ele,this.moveList.map(t=>new h(null,t.move)))}async init(){this.objList.init()}}class p{constructor(t){this.ele=t,this.data={},this.ele.getAttribute("data-num")&&(this.data.id=this.ele.getAttribute("data-num"),this.init())}async init(){if(this.data.id){let t=new n;this.data=await t.getPokemon(this.data.id),this.data.species=await t.getSpecies(this.data.id),this.ele.innerHTML=this.template(),this.ele.querySelector(`#types_${this.data.id}`).innerHTML=this.data.types.reverse().map(t=>`<span id='types_${this.data.id}_${t.type.name}'></span>`).join(" | "),this.data.types.reverse().map(t=>new r(this.ele.querySelector(`#types_${this.data.id}_${t.type.name}`),t.type)).forEach(t=>t.init()),this[`flavor_text_${this.data.id}`]=new c(this.ele.querySelector(`#flavor_text_${this.data.id}`),this.data.species.flavor_text_entries.filter(t=>t.language.name===u)),this[`moves_${this.data.id}`]=new d(this.ele.querySelector(`#moves_${this.data.id}`),this.data.moves),this.ele.querySelectorAll("nav .panel-heading").forEach(t=>t.addEventListener("click",this.tabClick.bind(this)))}}tabClick(t){t.target.classList.contains("is-active")?this.tabClear():(this.tabClear(),t.target.classList.add("is-active"),this.ele.querySelector(t.target.getAttribute("controls")).style.display="block",this.ele.querySelector(t.target.getAttribute("controls")).innerHTML||this[t.target.getAttribute("controls").replace("#","")].init())}tabClear(){this.ele.querySelectorAll("nav .panel-heading").forEach(t=>t.classList.remove("is-active")),this.ele.querySelectorAll("nav .panel-block").forEach(t=>t.style.display="none")}template(){return`<div class='box'>\n                    <div>\n                        <div class='level'>\n                            <div class='level-left'>\n                                <h1 class='level-item title'>${a(this.data.species.names).name}</h1>\n                                <span class= 'level-item'>\n                                    <figure class='image is-96x96'><img src='${this.data.sprites.front_default}'></figure>\n                                </span>\n                                <span id='types_${this.data.id}'></span>\n                            </div>\n                        </div>\n                        <nav class='panel'>\n                            <p class='panel-heading' controls='#flavor_text_${this.data.id}'>Flavor Text</p>\n                            <div id='flavor_text_${this.data.id}' class='panel-block' style='display:none'></div>\n\n                            <p class='panel-heading' controls='#moves_${this.data.id}'>Moves</p>\n                            <div id='moves_${this.data.id}' class='panel-block' style='display:none'></div>\n                        </nav>\n                    </div>\n                </div>`}}i.d(e,"LANGUAGE",function(){return u});const u="en";async function v(t){t.target.classList.add("is-loading");let e=new p(document.body.querySelector("#output"));e.data.id=document.body.querySelector("#id_input").value,await e.init(),t.target.classList.remove("is-loading")}document.addEventListener("DOMContentLoaded",function(){document.body.querySelector("#submit").addEventListener("click",v)})}]);